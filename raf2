import React, { useState } from "react";
import TeacherLayout from "@/components/layout/TeacherLayout";
import Tabs from "@mui/material/Tabs";
import Tab from "@mui/material/Tab";
import Box from "@mui/material/Box";
import Table from "../../../components/Table/Table";
import Typography from "@mui/material/Typography";
import { Container, Paper, Divider } from "@mui/material";
import { Button, Modal } from "@mui/material";
import HomeworkList from "@/components/homework/HomeList";
import StudentHomeworkList from "@/components/homework/StudentHomeworkList";
import HomeworkForm from "@/components/homework/HomeWorkForm";
import EditHomeworkDialog from "@/components/homework/EditHomeWork";
function CustomTabPanel(props) {
  const { children, value, index, ...other } = props;

  return (
    <div
      role="tabpanel"
      hidden={value !== index}
      id={`simple-tabpanel-${index}`}
      aria-labelledby={`simple-tab-${index}`}
      {...other}
    >
      {value === index && (
        <Box>
          <div>{children}</div>
        </Box>
      )}
    </div>
  );
}
const Index = ({ classObj, users }) => {
  const [homeworkList, setHomeworkList] = useState([]);
  const [isModalOpen, setModalOpen] = useState(false);
  const [data, setData] = useState(homeworkList);
  const handleCreateHomework = (newHomework) => {
    setHomeworkList([...homeworkList, { ...newHomework, completed: false }]);
  };

  console.log(homeworkList);
  const handleOpenModal = () => {
    setModalOpen(true);
  };

  const handleCloseModal = () => {
    setModalOpen(false);
  };

  const handleDeleteHomework = (index) => {
    const updatedHomeworkList = homeworkList.filter((_, i) => i !== index);
    setHomeworkList(updatedHomeworkList);
  };

  const handleEditHomework = (index, updatedHomework) => {
    const updatedHomeworkList = [...homeworkList];
    updatedHomeworkList[index] = { ...updatedHomework, completed: false };
    setHomeworkList(updatedHomeworkList);
  };

  const [value, setValue] = useState(0); // Change the initial value to 0

  const handleChange = (event, newValue) => {
    setValue(newValue);
  };
  const columnConfig = [
    { field: "homework", headerName: "Homework", width: 200 },
    { field: "deadline ", headerName: "Deadline", width: 200 },

    { field: "priority", headerName: "Priority", width: 120 },
    { field: "actions", headerName: "Actions", width: 300 },
  ];
  return (
    <TeacherLayout>
      <div className="px-4 sm:px-6 lg:px-8">
        <Box sx={{ width: "100%" }}>
          <Box sx={{ borderBottom: 1, borderColor: "divider" }}>
            <Tabs
              value={value}
              onChange={handleChange}
              aria-label="basic tabs example"
            >
              <Tab label="Overview" />
              <Tab label="Homework" />
              <Tab label="Class Post" />
            </Tabs>
          </Box>
          <CustomTabPanel value={value} index={0}>
            overive
          </CustomTabPanel>
          <CustomTabPanel value={value} index={1}>
            <Paper elevation={3} style={{ padding: "20px", marginTop: "20px" }}>
              <Button
                variant="contained"
                color="primary"
                onClick={handleOpenModal}
                style={{ marginBottom: "20px" }}
              >
                Add Homework
              </Button>

              <Typography variant="h4" gutterBottom>
                Homework
              </Typography>

              <Divider style={{ margin: "20px 0" }} />

              <Table
                columnConfig={columnConfig}
                data={homeworkList}
                setData={setHomeworkList}
              >
                <EditHomeworkDialog />
              </Table>

              {/* {homeworkList.length > 0 ? (
                <HomeworkList
                  totalStudents={30}
                  homeworkList={homeworkList}
                  completedHomeworkCount={3}
                  studentsNotCompleted={10}
                  onDelete={handleDeleteHomework}
                  onEdit={handleEditHomework}
                />
              ) : (
                <Typography variant="body1">No homework tasks yet.</Typography>
              )} */}
            </Paper>
            <Modal open={isModalOpen} onClose={handleCloseModal}>
              <Box
                sx={{
                  position: "absolute",
                  top: "50%",
                  left: "50%",
                  transform: "translate(-50%, -50%)",
                  bgcolor: "background.paper",
                  boxShadow: 24,
                  p: 4,
                }}
              >
                <Typography variant="h6" gutterBottom>
                  Add Homework
                </Typography>
                <HomeworkForm
                  onSubmit={handleCreateHomework}
                  setModalOpen={setModalOpen}
                />
              </Box>
            </Modal>
          </CustomTabPanel>

          <CustomTabPanel value={value} index={2}>
            Item Three
          </CustomTabPanel>
        </Box>
      </div>
    </TeacherLayout>
  );
};

export default Index;





// src/components/EditHomeworkDialog.js
import React, { useState, useEffect } from "react";
import {
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  Button,
  TextField,
} from "@mui/material";

const EditHomeworkDialog = ({
  isOpen,
  handleClose,
  initialHomework,
  onSave,
}) => {
  const [homework, setHomework] = useState(initialHomework);
  console.log("helo");
  useEffect(() => {
    setHomework(initialHomework);
  }, [initialHomework]);

  const handleHomeworkChange = (e) => {
    setHomework({ ...homework, homework: e.target.value });
  };

  const handleDeadlineChange = (e) => {
    setHomework({ ...homework, deadline: e.target.value });
  };

  const handleSave = () => {
    onSave(homework);
    handleClose();
  };

  if (!isOpen) {
    return null;
  }

  return (
    <Dialog open={isOpen} onClose={handleClose}>
      <DialogTitle>Edit Homework</DialogTitle>
      <DialogContent>
        <TextField
          label="Homework"
          fullWidth
          value={homework?.homework || ""}
          onChange={handleHomeworkChange}
        />
        <TextField
          label="Deadline"
          type="datetime-local"
          fullWidth
          value={homework?.deadline || ""}
          onChange={handleDeadlineChange}
          InputLabelProps={{
            shrink: true,
          }}
        />
      </DialogContent>
      <DialogActions>
        <Button onClick={handleClose} color="primary">
          Cancel
        </Button>
        <Button onClick={handleSave} color="primary">
          Save
        </Button>
      </DialogActions>
    </Dialog>
  );
};

export default EditHomeworkDialog;
